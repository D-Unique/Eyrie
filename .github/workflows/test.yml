name: Test Code

on:
  workflow_run:
    workflows: ["Lint Code"]
    types:
      - completed
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev, Nodejs(BE), fastapi(MSBE), mobile, web]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      js-changes: ${{ steps.filter.outputs.js }}
      python-changes: ${{ steps.filter.outputs.python }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            js:
              - 'Eyrie-web/**/*.{js,jsx,ts,tsx,json}'
              - 'Eyrie-mobile/**/*.{js,jsx,ts,tsx,json}'
              - 'MonoServer/**/*.{js,jsx,ts,tsx,json}'
              - '**/package.json'
              - '**/package-lock.json'
              - '**/yarn.lock'
            python:
              - 'FastApi-GraphQl/**/*.py'
              - 'FastApi-GraphQl/requirements.txt'
              - 'MonoServer/**/*.py'
              - '**/requirements.txt'
              - '**/Pipfile'
              - '**/Pipfile.lock'

  test-js:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.js-changes == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [Eyrie-web, Eyria-mobile, MonoServer]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/${{ matrix.project }}/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('${{ matrix.project }}/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd ${{ matrix.project }}
          npm ci
      
      - name: Run ESLint
        run: |
          cd ${{ matrix.project }}
          npm run lint || echo "Linting failed, but proceeding with tests..."
      
      - name: Run tests
        run: |
          cd ${{ matrix.project }}
          npm run test

  test-python:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.python-changes == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [FastApi-GraphQl, MonoServer]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8
          if [ -f ${{ matrix.project }}/requirements.txt ]; then
            pip install -r ${{ matrix.project }}/requirements.txt
          fi
      
      - name: Run Flake8
        run: |
          cd ${{ matrix.project }}
          flake8 . || echo "Linting failed, but proceeding with tests..."
      
      - name: Run tests
        run: |
          cd ${{ matrix.project }}
          pytest --verbose || echo "No tests found, skipping..."
